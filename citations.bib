@article{Abelson1998R5RS,
  author  = {
    Harold Abelson and R. Kent Dybvig and Christopher T. Haynes and Guillermo
    Juan Rozas and N. I. Adams IV and Daniel P. Friedman and Eugene E.
    Kohlbecker and Guy L. Steele Jr. and David H. Bartley and Robert H.
    Halstead Jr. and Don Oxley and Gerald J. Sussman and G. Brooks and Chris
    Hanson and Kent M. Pitman and Mitchell Wand
  },
  title   = {Revised Report on the Algorithmic Language Scheme},
  journal = {Higher-Order and Symbolic Computation},
  volume  = {11},
  number  = {1},
  year    = {1998},
  pages   = {7-105},
}

@article{McIlroy1960MacroExtensions,
  author    = {M. Douglas McIlroy},
  title     = {Macro Instruction Extensions of Compiler Languages},
  journal   = {Commun. ACM},
  volume    = {3},
  number    = {4},
  month     = {apr},
  year      = {1960},
  pages     = {214--220},
  publisher = {ACM},
  address   = {New York, NY, USA},
  note      = {
    This is probably the first paper on (textual) macros as a language
    extension mechanism.
  }
}

@inproceedings{Muchnick1980ComparisonOfLisp,
  author    = {Steven S. Muchnick and Uwe F. Pleban},
  title     = {A Semantic Comparison of LISP and SCHEME},
  booktitle = {
   Proceedings of the 1980 ACM conference on LISP and functional programming
  },
  series    = {LFP '80},
  year      = {1980},
  pages     = {56--64},
  publisher = {ACM},
  address   = {New York, NY, USA},
  note      = {
    This paper compares from a denotationally-semantic point of view four
    Lisp-family languages, including Lisp 1.0, Modern Lisp (fexpr Lisp), funarg
    Lisp and Scheme, and shows that Lisp 1.0 and Scheme are compositional while
    the other two are not.
  }
}

@incollection{Pfenning2001LogicalFrameworks,
  author    = {Frank Pfenning},
  title     = {Logical Frameworks},
  booktitle = {Handbook of Automated Reasoning},
  year      = {2001},
  pages     = {1063--1147},
  note      = {
    This chapter introduces the logical-framework way of formalizing a
    deduction system (a fragment of the intuitionistic first-order logic):
    specifying the abstract syntax of it, judgments and deductions in it;
    implementing it via logic meta-programming; and establishing meta-theories
    about it.
  }
}

@inproceedings{Schuman1970ExtensionMechanisms,
  author    = {Stephen A. Schuman and Philippe Jorrand },
  title     = {Definition Mechanisms in Extensible Programming Languages},
  booktitle = {
    Proceedings of the November 17-19, 1970, fall joint computer conference
  },
  series    = {AFIPS '70 (Fall)},
  year      = {1970},
  pages     = {9--20},
  publisher = {ACM},
  address   = {New York, NY, USA},
}

@inproceedings{Erdweg2011SugarJ,
  author    = {
    Erdweg, Sebastian and Kats, Lennart C.L. and Rendel, Tillmann and
    K\"{a}stner, Christian and Ostermann, Klaus and Visser, Eelco
  },
  title     = {SugarJ: library-based language extensibility},
  booktitle = {
    Proceedings of the ACM international conference companion on Object
    oriented programming systems languages and applications companion
  },
  series    = {SPLASH '11},
  year      = {2011},
  pages     = {187--188},
  publisher = {ACM},
  address   = {New York, NY, USA},
  keywords  = {
    dsl embedding, language extensibility, language workbench, library
  },
}

@inproceedings{Standish1975Extensibility,
  author    = {Thomas A. Standish},
  title     = {Extensibility in Programming Language Design},
  booktitle = {
    Proceedings of the May 19-22, 1975, national computer conference and
    exposition
  },
  series    = {AFIPS '75},
  year      = {1975},
  pages     = {287--290},
  publisher = {ACM},
  address   = {New York, NY, USA},
}

